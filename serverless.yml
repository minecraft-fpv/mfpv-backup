
# Helpful docs: https://serverless-stack.com/#the-basics
# https://serverless.com/framework/docs/providers/aws/events/apigateway

service: mfpv-backup

frameworkVersion: '2'

custom:
  bundle:
    packager: yarn
  serverless-offline:
    httpPort: 4000

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  memorySize: 2048 # optional, in MB, default is 1024
  timeout: 900 # optional, in seconds, default is 6
#  iam:
#    role:
#      managedPolicies:
#        - 'arn:aws:iam::aws:policy/AmazonElasticFileSystemClientReadWriteAccess'
#  apiGateway:
#    shouldStartNameWithService: true

#package:
#  individually: true # https://www.serverless.com/framework/docs/providers/aws/guide/packaging#packaging-functions-separately

functions:
  mfpvBackupWorld: # the name of the lambda. Size of bundle does not seem to affect compute performance but may incur higher memory usage.
    handler: src/handlers/backupWorld.handler
    events:
      - schedule: cron(0 4 * * ? *) # This should be a few minutes after the world starts to back up.
      - http:
          path: /backup_world
          method: ANY
          cors: true
          async: true
  mfpvBackupData:
    handler: src/handlers/backupData.handler
    events:
      - schedule: cron(51 3 * * ? *) # This should be the same time the world starts to back up.
      - http:
          path: /backup_data
          method: ANY
          cors: true
          async: true
      - http:
          path: /backup_data_sync
          method: ANY
          cors: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables
